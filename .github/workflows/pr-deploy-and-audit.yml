name: Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  PR_NUMBER: ${{ github.event.number }}
on: [pull_request]
jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        id: preview-deploy
        run: echo "URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} | tail -n 1)" >> $GITHUB_OUTPUT
      - name: Show Url
        run: echo ${{ steps.preview-deploy.outputs.URL }}
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Preview URL: ${{ steps.preview-deploy.outputs.URL }}
          pr_number:11
      - name: Add comment to PR
              id: loading_lighthouse_comment_to_pr
              uses: marocchino/sticky-pull-request-comment@v2
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  number: 11
                  header: lighthouse
                  message: |
                      üö¶ Running Lighthouse audit...
            - name: Add comment to PR
              id: loading_budget_comment_to_pr
              uses: marocchino/sticky-pull-request-comment@v2
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  number: 11
                  header: budget
                  message: |
                      ‚è± Running budget checks...
            - name: Audit URLs using Lighthouse
              id: lighthouse_audit
              uses: treosh/lighthouse-ci-action@v7
              with:
                  # add as many urls here as you wish to audit
                  # prefixed by the preview-url
                  urls: |
                      ${{ steps.preview-deploy.outputs.URL }}
                      ${{ steps.vercel_action.outputs.preview-url }}/blog
                  budgetPath: './budget.json'
                  uploadArtifacts: true
                  temporaryPublicStorage: true
                  runs: 3
            - name: Format lighthouse result
              id: lighthouse_result
              if: ${{ always() }}
              uses: actions/github-script@v4
              with:
                  github-token: ${{secrets.GITHUB_TOKEN}}
                  script: |
                      const links = ${{ steps.lighthouse_audit.outputs.links }}
                      const results = (${{ steps.lighthouse_audit.outputs.manifest }}).filter(result => result.isRepresentativeRun);

                      const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥';

                      const comment = results.map((result) => {
                        const summary = result.summary;
                        const url = result.url;

                        return `
                        üåé [${url}](${url})
                        ‚ö°Ô∏è [Lighthouse report](${links[url]})

                        | Category | Score |
                        | --- | --- |
                        ${Object.keys(summary).map((key) => {
                          const percentage = Math.round(summary[key] * 100);
                          return `| ${score(percentage)} ${key} | ${percentage} |`;
                        }).join('\n')}

                        `;
                      }).join('---');

                      core.setOutput("comment", comment);
            - name: Format budget result
              id: budget_result
              if: ${{ always() }}
              uses: actions/github-script@v4
              with:
                  github-token: ${{secrets.GITHUB_TOKEN}}
                  script: |
                      const assertions = ${{ steps.lighthouse_audit.outputs.assertionResults }};
                      if (!assertions.length) {
                        core.setOutput("comment", '‚úÖ Budget met, nothing to see here');
                      } else {
                        const comment = assertions.map((result) => {
                          return `
                      ‚ùå **${result.auditProperty || ''}.${result.auditId}** failure on [${result.url}](${result.url})

                      *${result.auditTitle}* - [docs](${result.auditDocumentationLink})

                      | Actual | Expected |
                      | --- | --- |
                      | ${result.actual} | ${result.operator} ${result.expected} |
                      `;
                        }).join('---');

                        core.setOutput("comment", comment);
                      }
            - name: Add Lighthouse comment to PR
              id: lighthouse_comment_to_pr
              if: ${{ always() }}
              uses: marocchino/sticky-pull-request-comment@v1
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  number: 11
                  header: lighthouse
                  message: |
                      ${{ steps.lighthouse_result.outputs.comment }}
            - name: Add Budget comment to PR
              id: budget_comment_to_pr
              if: ${{ always() }}
              uses: marocchino/sticky-pull-request-comment@v1
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  number: 11
                  header: budget
                  message: |
                      ${{ steps.budget_result.outputs.comment }}